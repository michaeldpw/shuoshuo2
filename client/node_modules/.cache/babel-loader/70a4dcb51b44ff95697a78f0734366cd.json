{"ast":null,"code":"var _jsxFileName = \"/Users/peiwendu/Desktop/shuoshuo2.0/client/src/pages/MyPost.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport MyPostList from '../components/MyPostList';\nimport { connect } from 'react-redux';\nimport { url } from '../url';\nimport { Redirect } from 'react-router-dom';\n\nclass MyPost extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      sessioncode: '',\n      avatar: '',\n      loading: false,\n      redirect: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }, () => {\n      axios.get(url + '/getsession').then(res => {\n        this.setState({\n          loading: false,\n          username: res.data.username,\n          sessioncode: res.data.code,\n          avatar: res.data.avatar\n        });\n      }).then(() => this.setState({\n        redirect: this.state.username ? false : true\n      }));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container mypost-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.props.auth.isLoggedIn ? React.createElement(MyPostList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, null)(My);","map":{"version":3,"sources":["/Users/peiwendu/Desktop/shuoshuo2.0/client/src/pages/MyPost.js"],"names":["React","axios","MyPostList","connect","url","Redirect","MyPost","Component","state","username","sessioncode","avatar","loading","redirect","componentDidMount","setState","get","then","res","data","code","render","props","auth","isLoggedIn","mapStateToProps","My"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,MAAM,EAAE,EAHJ;AAIJC,MAAAA,OAAO,EAAE,KAJL;AAKJC,MAAAA,QAAQ,EAAE;AALN,KAFyB;AAAA;;AAUjCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,CAAc;AAACH,MAAAA,OAAO,EAAE;AAAV,KAAd,EAA+B,MAAM;AACjCX,MAAAA,KAAK,CAACe,GAAN,CAAUZ,GAAG,GAAG,aAAhB,EAA+Ba,IAA/B,CAAoCC,GAAG,IAAI;AACvC,aAAKH,QAAL,CAAc;AACVH,UAAAA,OAAO,EAAE,KADC;AAEVH,UAAAA,QAAQ,EAAES,GAAG,CAACC,IAAJ,CAASV,QAFT;AAGVC,UAAAA,WAAW,EAAEQ,GAAG,CAACC,IAAJ,CAASC,IAHZ;AAIVT,UAAAA,MAAM,EAAEO,GAAG,CAACC,IAAJ,CAASR;AAJP,SAAd;AAMJ,OAPA,EAOEM,IAPF,CAOO,MAAM,KAAKF,QAAL,CAAc;AACxBF,QAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,QAAX,GAAqB,KAArB,GAA4B;AADd,OAAd,CAPb;AAUH,KAXD;AAYH;;AAGDY,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,UAAhB,GACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAGA,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALR,CADJ;AAUH;;AArCgC;;AAwCrC,MAAMC,eAAe,GAAIjB,KAAD,IAAW;AAC/B,SAAO;AACHe,IAAAA,IAAI,EAAEf,KAAK,CAACe;AADT,GAAP;AAGH,CAJD;;AAMA,eAAepB,OAAO,CAACsB,eAAD,EAAkB,IAAlB,CAAP,CAA+BC,EAA/B,CAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport MyPostList from '../components/MyPostList'\nimport { connect } from 'react-redux'\nimport { url } from '../url'\nimport { Redirect } from 'react-router-dom'\n\nclass MyPost extends React.Component {\n\n    state = {\n        username: '',\n        sessioncode: '',\n        avatar: '',\n        loading: false,\n        redirect: false\n    }\n\n    componentDidMount(){\n        this.setState({loading: true}, () => {\n            axios.get(url + '/getsession').then(res => {\n                this.setState({\n                    loading: false,\n                    username: res.data.username,\n                    sessioncode: res.data.code,\n                    avatar: res.data.avatar\n                })\n           }).then(() => this.setState({\n               redirect: this.state.username? false: true\n           }))\n        })  \n    }\n\n\n    render(){\n        return (\n            <div className=\"container mypost-container\">\n                {\n                    this.props.auth.isLoggedIn?\n                    <MyPostList />\n                    :\n                    <Redirect to='/signin' />\n                }              \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.auth\n    }\n}\n\nexport default connect(mapStateToProps, null)(My);"]},"metadata":{},"sourceType":"module"}