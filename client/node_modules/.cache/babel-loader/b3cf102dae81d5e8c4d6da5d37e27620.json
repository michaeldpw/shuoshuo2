{"ast":null,"code":"export function base64StringtoFile(base64String, filename) {\n  var arr = base64String.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n\n  return new File([u8arr], filename, {\n    type: mime\n  });\n}\nexport function downloadBase64File(base64Data, filename) {\n  var element = document.createElement('a');\n  element.setAttribute('href', base64Data);\n  element.setAttribute('download', filename);\n  element.style.display = 'none';\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n} // Extract an Base64 Image's File Extension\n\nexport function extractImageFileExtensionFromBase64(base64Data) {\n  return base64Data.substring('data:image/'.length, base64Data.indexOf(';base64'));\n} // Base64 Image to Canvas with a Crop\n\nexport function image64toCanvasRef(canvasRef, image64, crop) {\n  const canvas = canvasRef; // document.createElement('canvas');\n\n  canvas.width = crop.width;\n  canvas.height = crop.height;\n  const ctx = canvas.getContext('2d');\n  const image = new Image();\n  image.src = image64;\n\n  image.onload = function () {\n    ctx.drawImage(image, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);\n  };\n}","map":{"version":3,"sources":["/Users/peiwendu/Desktop/shuoshuo2.0/client/src/base64.js"],"names":["base64StringtoFile","base64String","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","downloadBase64File","base64Data","element","document","createElement","setAttribute","style","display","body","appendChild","click","removeChild","extractImageFileExtensionFromBase64","substring","indexOf","image64toCanvasRef","canvasRef","image64","crop","canvas","width","height","ctx","getContext","image","Image","src","onload","drawImage","x","y"],"mappings":"AAAA,OAAO,SAASA,kBAAT,CAA4BC,YAA5B,EAA0CC,QAA1C,EAAoD;AACvD,MAAIC,GAAG,GAAGF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAV;AAAA,MAAmCC,IAAI,GAAGF,GAAG,CAAC,CAAD,CAAH,CAAOG,KAAP,CAAa,SAAb,EAAwB,CAAxB,CAA1C;AAAA,MACIC,IAAI,GAAGC,IAAI,CAACL,GAAG,CAAC,CAAD,CAAJ,CADf;AAAA,MACyBM,CAAC,GAAGF,IAAI,CAACG,MADlC;AAAA,MAC0CC,KAAK,GAAG,IAAIC,UAAJ,CAAeH,CAAf,CADlD;;AAEA,SAAMA,CAAC,EAAP,EAAU;AACNE,IAAAA,KAAK,CAACF,CAAD,CAAL,GAAWF,IAAI,CAACM,UAAL,CAAgBJ,CAAhB,CAAX;AACH;;AACD,SAAO,IAAIK,IAAJ,CAAS,CAACH,KAAD,CAAT,EAAkBT,QAAlB,EAA4B;AAACa,IAAAA,IAAI,EAACV;AAAN,GAA5B,CAAP;AACH;AAED,OAAO,SAASW,kBAAT,CAA6BC,UAA7B,EAAyCf,QAAzC,EAAmD;AACtD,MAAIgB,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAd;AACAF,EAAAA,OAAO,CAACG,YAAR,CAAqB,MAArB,EAA6BJ,UAA7B;AACAC,EAAAA,OAAO,CAACG,YAAR,CAAqB,UAArB,EAAiCnB,QAAjC;AACAgB,EAAAA,OAAO,CAACI,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACAJ,EAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,OAA1B;AACAA,EAAAA,OAAO,CAACQ,KAAR;AACAP,EAAAA,QAAQ,CAACK,IAAT,CAAcG,WAAd,CAA0BT,OAA1B;AACD,C,CAED;;AACA,OAAO,SAASU,mCAAT,CAA8CX,UAA9C,EAA0D;AAC/D,SAAOA,UAAU,CAACY,SAAX,CAAqB,cAAcnB,MAAnC,EAA2CO,UAAU,CAACa,OAAX,CAAmB,SAAnB,CAA3C,CAAP;AACD,C,CAED;;AACA,OAAO,SAASC,kBAAT,CAA6BC,SAA7B,EAAwCC,OAAxC,EAAiDC,IAAjD,EAAuD;AAC5D,QAAMC,MAAM,GAAGH,SAAf,CAD4D,CACnC;;AACzBG,EAAAA,MAAM,CAACC,KAAP,GAAeF,IAAI,CAACE,KAApB;AACAD,EAAAA,MAAM,CAACE,MAAP,GAAgBH,IAAI,CAACG,MAArB;AACA,QAAMC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AACA,QAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;AACAD,EAAAA,KAAK,CAACE,GAAN,GAAYT,OAAZ;;AACAO,EAAAA,KAAK,CAACG,MAAN,GAAe,YAAY;AACzBL,IAAAA,GAAG,CAACM,SAAJ,CACEJ,KADF,EAEEN,IAAI,CAACW,CAFP,EAGEX,IAAI,CAACY,CAHP,EAIEZ,IAAI,CAACE,KAJP,EAKEF,IAAI,CAACG,MALP,EAME,CANF,EAOE,CAPF,EAQEH,IAAI,CAACE,KARP,EASEF,IAAI,CAACG,MATP;AAWD,GAZD;AAaD","sourcesContent":["export function base64StringtoFile(base64String, filename) {\n    var arr = base64String.split(','), mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n    while(n--){\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, {type:mime});\n}\n\nexport function downloadBase64File (base64Data, filename) {\n    var element = document.createElement('a')\n    element.setAttribute('href', base64Data)\n    element.setAttribute('download', filename)\n    element.style.display = 'none'\n    document.body.appendChild(element)\n    element.click()\n    document.body.removeChild(element)\n  }\n  \n  // Extract an Base64 Image's File Extension\n  export function extractImageFileExtensionFromBase64 (base64Data) {\n    return base64Data.substring('data:image/'.length, base64Data.indexOf(';base64'))\n  }\n  \n  // Base64 Image to Canvas with a Crop\n  export function image64toCanvasRef (canvasRef, image64, crop) {\n    const canvas = canvasRef // document.createElement('canvas');\n    canvas.width = crop.width\n    canvas.height = crop.height\n    const ctx = canvas.getContext('2d')\n    const image = new Image()\n    image.src = image64\n    image.onload = function () {\n      ctx.drawImage(\n        image,\n        crop.x,\n        crop.y,\n        crop.width,\n        crop.height,\n        0,\n        0,\n        crop.width,\n        crop.height        \n      )\n    }\n  }\n  "]},"metadata":{},"sourceType":"module"}